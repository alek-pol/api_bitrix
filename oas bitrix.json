{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "OAS Bitrix",
    "description" : "## Перевод в вид OAS3",
    "contact" : {
      "email" : "alek_pol@outlook.com"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://{domen}.bitrix24.ru/rest",
    "variables" : {
      "domen" : {
        "description" : "Название домена",
        "default" : "b24-"
      }
    }
  }, {
    "url" : "https://{domen}/rest/",
    "variables" : {
      "domen" : {
        "description" : "Название домена",
        "default" : "b24-"
      }
    }
  } ],
  "security" : [ {
    "ApiIntegrationAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Users",
    "description" : "Работа с пользователями"
  }, {
    "name" : "Telephony",
    "description" : "Телефония"
  } ],
  "paths" : {
    "/user.fields.{transport}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Список полей пользователя",
        "description" : "### Получение списка названий полей пользователя.\nМетод отдаёт стандартный список полей, использование пользовательских полей не предусмотрено.\n",
        "parameters" : [ {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "401" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : {
                      "error" : "expired_token",
                      "error_description" : "The access token provided has expired"
                    }
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : {
                      "error" : "invalid_token",
                      "error_description" : "Unable to get application by token"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user.current.{transport}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Информация о текущем пользователе",
        "description" : "### Получение информации о текущем пользователе.\nМетод параметров не имеет (кроме транспорта).\nОднако, сделав rest запрос с использованием данных из ___$_REQUEST___ к домену __DOMAIN__ и добавив ___AUTH_ID___ к запросу для доступа к Битрикс24, можно узнать какой пользователь открыл страницу в контексте Битрикс24\n",
        "parameters" : [ {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "401" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : {
                      "error" : "expired_token",
                      "error_description" : "The access token provided has expired"
                    }
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : {
                      "error" : "invalid_token",
                      "error_description" : "Unable to get application by token"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user.get.{transport}" : {
      "get" : {
        "tags" : [ "ToDo" ],
        "summary" : "Список пользователей (фильтрованный)",
        "description" : "### Получение фильтрованного списка пользователей.\nМетод вернет всех пользователей за исключением: ботов, пользователей для e-mail, пользователей для Открытых Линий, пользователей Реплики.\n",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : {
                "field" : {
                  "type" : "string"
                },
                "value" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Список пользователей (фильтрованный)",
        "description" : "### Получение фильтрованного списка пользователей.\nМетод вернет всех пользователей за исключением: ботов, пользователей для e-mail, пользователей для Открытых Линий, пользователей Реплики.\n",
        "parameters" : [ {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        } ],
        "requestBody" : {
          "description" : "## __Параметры:__\n`sort:` - поле, по которому сортируются результаты\n---\n`order:` - направление сортировки\n* __ASC__ - по возрастанию;\n* __DESC__ - по убыванию.\n---\n`filter:` -  Дополнительно можно указывать любые параметры из `\"GET /user.fields\"` для фильтрации по их значениям. Кроме основных полей, доступны дополнительные:  \n  * __UF_DEPARTMENT__ - принадлежность к структуре компании;\n  * __UF_PHONE_INNER___ - внутренний телефонный номер;\n  * __IS_ONLINE__ - [Y/N] - позволяет показать только авторизованных или нет пользователей.\n  * __NAME_SEARCH__ - быстрый поиск по персональным данным.\n  * __USER_TYPE__ - тип пользователя. Может принимать следующие значения:\n    + __employee__ - сотрудник,\n    + __extranet__ - пользователь экстранета,\n    + __email__ - почтовый пользователь\n  * __ACTIVE__ - при значении true исключает из запроса уволенных пользователей.\n  #### Параметры фильтрации могут принимать значение массивов.\n---\n`ADMIN_MODE` -  Ключ для работы _(Получается с помощью метода __user.fields__)_ в режиме администратора, служит для получения данных о любых пользователях.\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              },
              "examples" : {
                "example_1" : {
                  "value" : {
                    "sort" : "PERSONAL_BIRTHDAY",
                    "order" : "ASC",
                    "filter" : {
                      "PERSONAL_STREET" : "Липовая аллея",
                      "UF_DEPARTMENT" : "7"
                    }
                  }
                },
                "example_2" : {
                  "value" : {
                    "sort" : "ID",
                    "order" : "DESC",
                    "filter" : {
                      "IS_ONLINE" : "N"
                    }
                  }
                },
                "example_3" : {
                  "value" : {
                    "filter" : {
                      "UF_PHONE_INNER" : [ "222", "555" ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "401" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : {
                      "error" : "expired_token",
                      "error_description" : "The access token provided has expired"
                    }
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : {
                      "error" : "invalid_token",
                      "error_description" : "Unable to get application by token"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Доступ запрещен",
            "headers" : {
              "status" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "403 Forbidden"
                }
              }
            }
          }
        }
      }
    },
    "/user.search.{transport}" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Список пользователей (ускоренный)",
        "description" : "### Метод для получения списка пользователей с ускоренным поиском по персональным данным:\nимя, фамилия, отчество, название подразделения, должность. \n\n__Работает в двух режимах:__ \n  * быстро с помощью ___Fulltext Index___; \n  * более медленный вариант через правый LIKE \n    (поддержка определяется автоматически).\n",
        "parameters" : [ {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        } ],
        "requestBody" : {
          "description" : "## __Параметры:__\n`filter:` - Массив может содержать поля в любом сочетании: \n  * __NAME__ - имя;\n  * __LAST_NAME__ - фамилия;\n  * __SECOND_NAME__ - отчество;\n  * __WORK_POSITION__ - должность;\n  * __UF_DEPARTMENT_NAME__ - название подразделения;\n  * __USER_TYPE__ - тип пользователя. Может принимать следующие значения:\n    + __employee__ - сотрудник;\n    + __extranet__ - пользователь экстранета;\n    + __email__ - почтовый пользователь.\n  * Или `FIND` - поле которое будет искать во всех перечисленных полях _(Это аналог режима старого CUser::GetList в котором можно было задать фильтр NAME_SEARCH и получить результат)_\n  ---\n    Метод может работать либо с фильтрацией с помощью ключа FIND или со всеми другими полями. Одновременно использовать FIND и любое другое поле - нельзя.\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              },
              "examples" : {
                "example_1" : {
                  "value" : {
                    "filter" : {
                      "NAME" : "Иван",
                      "SECOND_NAME" : "Константинович"
                    }
                  }
                },
                "example_2" : {
                  "value" : {
                    "filter" : {
                      "UF_DEPARTMENT_NAME" : "Отдел маркетинга и рекламы"
                    }
                  }
                },
                "example_3" : {
                  "value" : {
                    "filter" : {
                      "FIND" : "Боборожоров"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "401" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : {
                      "error" : "expired_token",
                      "error_description" : "The access token provided has expired"
                    }
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : {
                      "error" : "invalid_token",
                      "error_description" : "Unable to get application by token"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Доступ запрещен",
            "headers" : {
              "status" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "403 Forbidden"
                }
              }
            }
          }
        }
      }
    },
    "/user.add.{transport}" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Добавление пользователя",
        "description" : "### Приглашает пользователя.\n__!__ Возможно только от имени пользователя с правами приглашения пользователей.\n#### В случае успеха пользователю будет выслано стандартное приглашение на портал.\n### *Дополнительно:*\n* Если нужно добавить пользователя экстранета, то в полях необходимо передать:\n  + __EXTRANET: Y__ и __SONET_GROUP_ID: [...]__\n* Если нужно добавить пользователя интранета, то обязательно передаётся:\n  + __UF_DEPARTMENT: [...]__\n",
        "parameters" : [ {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_2"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_3"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Результат запроса",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "400" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "wrong_email" : {
                    "description" : "Не указан / неправильно указан E-mail",
                    "value" : {
                      "error" : "ERROR_CORE",
                      "error_description" : "wrong_email"
                    }
                  },
                  "access_denied" : {
                    "description" : "Неправильный запрос",
                    "value" : {
                      "error" : "ERROR_CORE",
                      "error_description" : "access_denied"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "wrong_email" : {
                    "description" : "Не указан / неправильно указан E-mail",
                    "value" : "<response>\n  <error>ERROR_CORE</error>\n  <error_description>wrong_email</error_description>\n</response>\n"
                  },
                  "access_denied" : {
                    "description" : "Неправильный запрос",
                    "value" : "<response>\n  <error>ERROR_CORE</error>\n  <error_description>access_denied</error_description>\n</response>\n"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : {
                      "error" : "expired_token",
                      "error_description" : "The access token provided has expired"
                    }
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : {
                      "error" : "invalid_token",
                      "error_description" : "Unable to get application by token"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user.update.{transport}" : {
      "get" : {
        "tags" : [ "ToDo" ],
        "summary" : "Обновление данных пользователя",
        "description" : "### Обновляет данные пользователя.\n#### Приведено как пример (не все поля доступны)\n    Возможно только от имени пользователя с правами приглашения пользователей.\n",
        "parameters" : [ {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        }, {
          "name" : "ID",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ACTIVE",
          "in" : "query",
          "description" : "Активность",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "EMAIL",
          "in" : "query",
          "description" : "E-Mail",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "NAME",
          "in" : "query",
          "description" : "Имя",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Результат запроса",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "400" : {
            "description" : "Неправильный запрос",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : {
                      "error" : "expired_token",
                      "error_description" : "The access token provided has expired"
                    }
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : {
                      "error" : "invalid_token",
                      "error_description" : "Unable to get application by token"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Доступ запрещен",
            "headers" : {
              "status" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "403 Forbidden"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Обновление данных пользователя",
        "description" : "### Обновляет данные пользователя.\n    Возможно только от имени пользователя с правами приглашения пользователей.\n",
        "parameters" : [ {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_4"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_5"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Результат запроса",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "400" : {
            "description" : "Неправильный запрос",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : {
                      "error" : "expired_token",
                      "error_description" : "The access token provided has expired"
                    }
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : {
                      "error" : "invalid_token",
                      "error_description" : "Unable to get application by token"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Доступ запрещен",
            "headers" : {
              "status" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "example" : "403 Forbidden"
                }
              }
            }
          }
        }
      }
    },
    "/telephony.externalcall.register.{transport}" : {
      "post" : {
        "tags" : [ "Telephony" ],
        "summary" : "Регистрирует звонок в Битрикс24",
        "description" : "### Метод регистрирует звонок в Битрикс24, для чего ищет в CRM соответствующий номеру объект. \n- Если находит, то добавляет звонок в привязке к найденному объекту. \n- Если не находит, то может автоматически создать лид.\n#### Одновременно с регистрацией звонка метод опционально может показать пользователю карточку звонка. Пользователь, которому показывается карточка, идентифицируется либо по __USER_ID__, либо по __USER_PHONE_INNER__ (поля помечены как обязательные, но фактически, нужно только одно из двух)\n#### Не нужно повторно вызывать этот метод для звонков, полученных на событии OnExternalCallStart. Эти звонки уже зарегистрированы в системе и для них надо вызывать только telephony.externalcall.finish в конце звонка.\n    Внимание! Повторный вызов telephony.externalcall.register с теми же параметрами, без закрытия предыдущего звонка методом telephony.externalcall.finish, выдает тот же CALL_ID в течение 30 минут.\n  Для создания дела \"звонок\" необходимо также вызывать метод telephony.externalcall.finish/\n",
        "parameters" : [ {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_6"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "401" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : {
                      "error" : "expired_token",
                      "error_description" : "The access token provided has expired"
                    }
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : {
                      "error" : "invalid_token",
                      "error_description" : "Unable to get application by token"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/telephony.externalcall.finish.{transport}" : {
      "post" : {
        "tags" : [ "Telephony" ],
        "summary" : "Завершает звонок в Битрикс24",
        "description" : "### Метод завершает звонок, фиксирует его в статистике, скрывает у пользователя карточку звонка. \n#### Метод возвращает массив, аналогичный методу voximplant.statistic.get.\n",
        "parameters" : [ {
          "name" : "transport",
          "in" : "path",
          "description" : "Формат выдачи результатов (json|xml)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "xml" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_7"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_10"
                }
              }
            }
          },
          "401" : {
            "description" : "Ошибка авторизации",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : {
                      "error" : "expired_token",
                      "error_description" : "The access token provided has expired"
                    }
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : {
                      "error" : "invalid_token",
                      "error_description" : "Unable to get application by token"
                    }
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_401"
                },
                "examples" : {
                  "expired_token" : {
                    "description" : "Просрочен токен",
                    "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
                  },
                  "invalid_token" : {
                    "description" : "Ошибка в токене",
                    "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "user_fields" : {
        "type" : "object",
        "properties" : {
          "ID" : {
            "type" : "string",
            "description" : "ID",
            "example" : "ID"
          },
          "ACTIVE" : {
            "type" : "string",
            "description" : "Активность",
            "example" : "Активность"
          },
          "EMAIL" : {
            "type" : "string",
            "description" : "E-Mail",
            "example" : "E-Mail"
          },
          "NAME" : {
            "type" : "string",
            "description" : "Имя",
            "example" : "Имя"
          },
          "LAST_NAME" : {
            "type" : "string",
            "description" : "Фамилия",
            "example" : "Фамилия"
          },
          "SECOND_NAME" : {
            "type" : "string",
            "description" : "Отчество",
            "example" : "Отчество"
          },
          "PERSONAL_GENDER" : {
            "type" : "string",
            "description" : "Пол",
            "example" : "Пол"
          },
          "PERSONAL_PROFESSION" : {
            "type" : "string",
            "description" : "Профессия",
            "example" : "Профессия"
          },
          "PERSONAL_WWW" : {
            "type" : "string",
            "description" : "Домашняя страничка",
            "example" : "Домашняя страничка"
          },
          "PERSONAL_BIRTHDAY" : {
            "type" : "string",
            "description" : "Дата рождения",
            "example" : "Дата рождения"
          },
          "PERSONAL_PHOTO" : {
            "type" : "string",
            "description" : "Фотография",
            "example" : "Фотография"
          },
          "PERSONAL_ICQ" : {
            "type" : "string",
            "description" : "ICQ",
            "example" : "ICQ"
          },
          "PERSONAL_PHONE" : {
            "type" : "string",
            "description" : "Личный телефон",
            "example" : "Личный телефон"
          },
          "PERSONAL_FAX" : {
            "type" : "string",
            "description" : "Факс",
            "example" : "Факс"
          },
          "PERSONAL_MOBILE" : {
            "type" : "string",
            "description" : "Личный мобильный",
            "example" : "Личный мобильный"
          },
          "PERSONAL_PAGER" : {
            "type" : "string",
            "description" : "Пейджер",
            "example" : "Пейджер"
          },
          "PERSONAL_STREET" : {
            "type" : "string",
            "description" : "Улица проживания",
            "example" : "Улица проживания"
          },
          "PERSONAL_CITY" : {
            "type" : "string",
            "description" : "Город проживания",
            "example" : "Город проживания"
          },
          "PERSONAL_STATE" : {
            "type" : "string",
            "description" : "Область / край",
            "example" : "Область / край"
          },
          "PERSONAL_ZIP" : {
            "type" : "string",
            "description" : "Почтовый индекс",
            "example" : "Почтовый индекс"
          },
          "PERSONAL_COUNTRY" : {
            "type" : "string",
            "description" : "Страна",
            "example" : "Страна"
          },
          "WORK_COMPANY" : {
            "type" : "string",
            "description" : "Компания",
            "example" : "Компания"
          },
          "WORK_POSITION" : {
            "type" : "string",
            "description" : "Должность",
            "example" : "Должность"
          },
          "WORK_PHONE" : {
            "type" : "string",
            "description" : "Телефон компании",
            "example" : "Телефон компании"
          },
          "UF_DEPARTMENT" : {
            "type" : "string",
            "description" : "Подразделения",
            "example" : "Подразделения"
          },
          "UF_INTERESTS" : {
            "type" : "string",
            "description" : "Интересы",
            "example" : "Интересы"
          },
          "UF_SKILLS" : {
            "type" : "string",
            "description" : "Навыки",
            "example" : "Навыки"
          },
          "UF_WEB_SITES" : {
            "type" : "string",
            "description" : "Другие сайты",
            "example" : "Другие сайты"
          },
          "UF_XING" : {
            "type" : "string",
            "description" : "Xing",
            "example" : "Xing"
          },
          "UF_LINKEDIN" : {
            "type" : "string",
            "description" : "LinkedIn",
            "example" : "LinkedIn"
          },
          "UF_FACEBOOK" : {
            "type" : "string",
            "description" : "Facebook",
            "example" : "Facebook"
          },
          "UF_TWITTER" : {
            "type" : "string",
            "description" : "Twitter",
            "example" : "Twitter"
          },
          "UF_SKYPE" : {
            "type" : "string",
            "description" : "Логин Skype",
            "example" : "Логин Skype"
          },
          "UF_DISTRICT" : {
            "type" : "string",
            "description" : "Район",
            "example" : "Район"
          },
          "UF_PHONE_INNER" : {
            "type" : "string",
            "description" : "Внутренний телефон",
            "example" : "Внутренний телефон"
          },
          "USER_TYPE" : {
            "type" : "string",
            "description" : "USER_TYPE",
            "example" : "USER_TYPE"
          }
        }
      },
      "user" : {
        "type" : "object",
        "properties" : {
          "ACTIVE" : {
            "type" : "boolean",
            "description" : "Активность",
            "example" : true
          },
          "EMAIL" : {
            "type" : "string",
            "description" : "E-Mail",
            "example" : "i.martyanov@bobro42.com"
          },
          "NAME" : {
            "type" : "string",
            "description" : "Имя",
            "example" : "Иван"
          },
          "LAST_NAME" : {
            "type" : "string",
            "description" : "Фамилия",
            "example" : "Мартьянов"
          },
          "SECOND_NAME" : {
            "type" : "string",
            "description" : "Отчество",
            "example" : "Семенович"
          },
          "PERSONAL_GENDER" : {
            "type" : "string",
            "description" : "Пол",
            "example" : "M"
          },
          "PERSONAL_PROFESSION" : {
            "type" : "string",
            "description" : "Профессия",
            "example" : "Управленец"
          },
          "PERSONAL_WWW" : {
            "type" : "string",
            "description" : "Домашняя страничка",
            "example" : "www.ru"
          },
          "PERSONAL_BIRTHDAY" : {
            "pattern" : "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}",
            "type" : "string",
            "description" : "Дата рождения",
            "format" : "date-time",
            "example" : "1991-01-10T03:00:00+03:00"
          },
          "PERSONAL_PHOTO" : {
            "type" : "string",
            "description" : "Фотография",
            "example" : "https://cdn-ru.bitrix24.ru/b11223344/main/111/112233bbddaaff5566778899887766cc/my_avatar.jpg"
          },
          "PERSONAL_ICQ" : {
            "type" : "string",
            "description" : "ICQ",
            "example" : "000123321"
          },
          "PERSONAL_PHONE" : {
            "type" : "string",
            "description" : "Личный телефон",
            "example" : "8 (999) 888-55-55"
          },
          "PERSONAL_FAX" : {
            "type" : "string",
            "description" : "Факс",
            "example" : "8 (999) 888-55-55"
          },
          "PERSONAL_MOBILE" : {
            "type" : "string",
            "description" : "Личный мобильный",
            "example" : "+79998885555"
          },
          "PERSONAL_PAGER" : {
            "type" : "string",
            "description" : "Пейджер",
            "example" : "777555"
          },
          "PERSONAL_STREET" : {
            "type" : "string",
            "description" : "Улица проживания",
            "example" : "Улица проживания"
          },
          "PERSONAL_CITY" : {
            "type" : "string",
            "description" : "Город проживания",
            "example" : "Город проживания"
          },
          "PERSONAL_STATE" : {
            "type" : "string",
            "description" : "Область / край",
            "example" : "Область / край"
          },
          "PERSONAL_ZIP" : {
            "type" : "string",
            "description" : "Почтовый индекс",
            "example" : "Почтовый индекс"
          },
          "PERSONAL_COUNTRY" : {
            "type" : "string",
            "description" : "Страна",
            "example" : "Россия"
          },
          "WORK_COMPANY" : {
            "type" : "string",
            "description" : "Компания",
            "example" : "Бобры и Зайцы"
          },
          "WORK_POSITION" : {
            "type" : "string",
            "description" : "Должность",
            "example" : "Руководитель"
          },
          "WORK_PHONE" : {
            "type" : "string",
            "description" : "Телефон компании",
            "example" : "8 (999) 888-00-00"
          },
          "UF_DEPARTMENT" : {
            "type" : "array",
            "description" : "Подразделения (IDs)",
            "example" : [ 1, 8 ],
            "items" : {
              "type" : "integer"
            }
          },
          "UF_INTERESTS" : {
            "type" : "string",
            "description" : "Интересы",
            "example" : "Музыка и фильмы"
          },
          "UF_SKILLS" : {
            "type" : "string",
            "description" : "Навыки",
            "example" : "Управлять"
          },
          "UF_WEB_SITES" : {
            "type" : "string",
            "description" : "Другие сайты",
            "example" : "www.bobro42.rt"
          },
          "UF_XING" : {
            "type" : "string",
            "description" : "Xing",
            "example" : "https://www.xing.com/MartIvSen"
          },
          "UF_LINKEDIN" : {
            "type" : "string",
            "description" : "LinkedIn",
            "example" : "https://www.linkedin.com/MartIvSen"
          },
          "UF_FACEBOOK" : {
            "type" : "string",
            "description" : "Facebook",
            "example" : "https://www.fb.com/MartIvSen"
          },
          "UF_TWITTER" : {
            "type" : "string",
            "description" : "Twitter",
            "example" : "https://twitter.com/MartIvSen"
          },
          "UF_SKYPE" : {
            "type" : "string",
            "description" : "Логин Skype",
            "example" : "MartIvSen"
          },
          "UF_DISTRICT" : {
            "type" : "string",
            "description" : "Район",
            "example" : "Центральный-парк"
          },
          "UF_PHONE_INNER" : {
            "type" : "string",
            "description" : "Внутренний телефон",
            "example" : "555"
          },
          "USER_TYPE" : {
            "type" : "string",
            "description" : "USER_TYPE",
            "example" : ""
          }
        }
      },
      "call_ext_register_req" : {
        "type" : "object",
        "properties" : {
          "USER_ID" : {
            "type" : "integer",
            "description" : "Идентификатор пользователя (обязательный на выбор вместо USER_PHONE_INNER)"
          },
          "USER_PHONE_INNER" : {
            "type" : "string",
            "description" : "Внутренний номер пользователя (обязательный на выбор вместо USER_ID)"
          },
          "PHONE_NUMBER" : {
            "type" : "string",
            "description" : "Номер телефона (Обязательный)"
          },
          "CALL_START_DATE" : {
            "type" : "string",
            "description" : "Дата/время звонка в формате iso8601.\tstring"
          },
          "CRM_CREATE" : {
            "type" : "integer",
            "description" : "[0/1] - Автоматическое создание в CRM сущности, связанной со звонком. При необходимости, создает в CRM лид или сделку, в зависимости от настроек и режима работы CRM . Обратите внимание, что дело звонка создается при любом значении этого параметра"
          },
          "CRM_SOURCE" : {
            "type" : "string",
            "description" : "STATUS_ID источника из справочника источников. Получить список источников можно методом crm.status.list с фильтром по 'ENTITY_ID' 'SOURCE'"
          },
          "CRM_ENTITY_TYPE" : {
            "type" : "string",
            "description" : "Тип объекта CRM, из карточки которого совершается звонок - CONTACT | COMPANY | LEAD"
          },
          "CRM_ENTITY_ID" : {
            "type" : "integer",
            "description" : "Идентификатор объекта CRM, тип которого указан в CRM_ENTITY_TYPE"
          },
          "SHOW" : {
            "type" : "integer",
            "description" : "[0/1] Показывать ли карточку звонка (по умолчанию 1)"
          },
          "CALL_LIST_ID" : {
            "type" : "integer",
            "description" : "Идентификатор списка обзвона, к которому должен быть привязан звонок"
          },
          "LINE_NUMBER" : {
            "type" : "string",
            "description" : "Номер внешней линии, через который совершался звонок (см. telephony.externalLine.add) Важно! Значения из этого параметра используются в сценариях сквозной аналитики Битрикс24. Поэтому решения по интеграции с телефонией для каталога Приложения24 в обязательном порядке должны передавать здесь номер, на который был совершён регистрируемый входящий звонок"
          },
          "TYPE" : {
            "type" : "integer",
            "description" : "Обязательный. Тип звонка (1 - исходящий; 2 - входящий; 3 - входящий с перенаправлением; 4 - обратный)"
          }
        }
      },
      "call_ext_register_res" : {
        "type" : "object",
        "properties" : {
          "CALL_ID" : {
            "type" : "integer",
            "description" : "Идентификатор звонка внутри Битрикс24"
          },
          "CRM_CREATED_LEAD" : {
            "type" : "integer",
            "description" : "Идентификатор созданного лида (создается, если в CRM не найден объект по входящему номеру)"
          },
          "CRM_CREATED_ENTITIES" : {
            "type" : "array",
            "description" : "Массив автоматически созданных в CRM сущностей при регистрации звонка",
            "items" : {
              "$ref" : "#/components/schemas/call_ext_register_res_CRM_CREATED_ENTITIES"
            }
          },
          "CRM_ENTITY_TYPE" : {
            "type" : "string",
            "description" : "Тип найденного в CRM объекта по входящему номеру CONTACT | COMPANY | LEAD"
          },
          "CRM_ENTITY_ID" : {
            "type" : "integer",
            "description" : "Идентификатор найденного в CRM объекта"
          },
          "LEAD_CREATION_ERROR" : {
            "type" : "string"
          }
        }
      },
      "call_ext_finish_req" : {
        "type" : "object",
        "properties" : {
          "CALL_ID" : {
            "type" : "string",
            "description" : "Идентификатор звонка внутри Битрикс24 - из метода telephony.externalcall.register (Обязательный)"
          },
          "USER_ID" : {
            "type" : "integer",
            "description" : "Идентификатор пользователя (обязательный на выбор вместо USER_PHONE_INNER)"
          },
          "USER_PHONE_INNER" : {
            "type" : "string",
            "description" : "Внутренний номер пользователя (обязательный на выбор вместо USER_ID)"
          },
          "DURATION" : {
            "type" : "integer",
            "description" : "Длительность в сек. (Обязательный)"
          },
          "COST" : {
            "type" : "number",
            "description" : "Стоимость звонка",
            "format" : "double"
          },
          "COST_CURRENCY" : {
            "type" : "string",
            "description" : "Валюта, в которой указана стоимость звонка. Список валют можно получить методом crm.currency.list."
          },
          "STATUS_CODE" : {
            "type" : "string",
            "description" : "SIP-код статуса звонка. Возможны статусы (success - Успешная регистрация; error - Неудачная регистрация; in_progress - В процессе регистрации; wait - Ожидает начала регистрации)"
          },
          "FAILED_REASON" : {
            "type" : "string",
            "description" : "Причина несостоявшегося звонка"
          },
          "RECORD_URL" : {
            "type" : "string",
            "description" : "URL файла (желательно mp3) с записью звонка. (Портал осуществит две попытки скачать запись по указанному адресу. В случае неудачи, запись приложена не будет и никакого уведомления об ошибке отправлено не будет). Данный параметр является устаревшим и оставлен исключительно для обратной совместимости. Использовать его крайне не рекомендуется. Для загрузки записи звонка используйте метод telephony.externalCall.attachRecord."
          },
          "VOTE" : {
            "type" : "integer",
            "description" : "Оценка звонка пользователем (если АТС поддерживает функционал оценки разговора)"
          },
          "ADD_TO_CHAT" : {
            "type" : "integer",
            "description" : "Добавлять ли сообщение о совершенном звонке сотруднику Б24 в чат ( [0 / 1], по умолчанию 1)"
          }
        }
      },
      "call_ext_finish_res" : {
        "type" : "object",
        "properties" : {
          "CALL_ID" : {
            "type" : "string",
            "description" : "Идентификатор звонка внутри Битрикс24"
          },
          "EXTERNAL_CALL_ID" : {
            "type" : "string"
          },
          "CRM_ENTITY_TYPE" : {
            "type" : "string",
            "description" : "Тип объекта CRM, к которому прикреплено дело (например LEAD)"
          },
          "CRM_ENTITY_ID" : {
            "type" : "integer",
            "description" : "Идентификатор объекта CRM, к которому прикреплено дело"
          },
          "ID" : {
            "type" : "integer",
            "description" : "Идентификатор звонка"
          }
        }
      },
      "time" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "number",
            "format" : "float",
            "example" : 1601491901.504968
          },
          "finish" : {
            "type" : "number",
            "format" : "float",
            "example" : 1601491901.546003
          },
          "duration" : {
            "type" : "number",
            "format" : "double",
            "example" : 0.04103517532348633
          },
          "processing" : {
            "type" : "number",
            "format" : "double",
            "example" : 0.0008461475372314453
          },
          "date_start" : {
            "pattern" : "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}",
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-09-30T20:20:09+03:00"
          },
          "date_finish" : {
            "pattern" : "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+\\d{2}:\\d{2}",
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-09-30T20:20:09+03:00"
          }
        }
      },
      "error" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string",
            "description" : "Ошибка"
          },
          "error_description" : {
            "type" : "string",
            "description" : "Описание ошибки"
          }
        },
        "description" : "Ошибка",
        "xml" : {
          "name" : "response"
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/user_fields"
          },
          "time" : {
            "$ref" : "#/components/schemas/time"
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/user_fields"
          },
          "time" : {
            "$ref" : "#/components/schemas/time"
          }
        },
        "xml" : {
          "name" : "response"
        }
      },
      "inline_response_401" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/error"
        } ]
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "allOf" : [ {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "string",
                  "description" : "ID",
                  "example" : "1"
                }
              }
            }, {
              "$ref" : "#/components/schemas/user"
            } ]
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/time"
            } ]
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "allOf" : [ {
              "type" : "object",
              "properties" : {
                "ID" : {
                  "type" : "string",
                  "description" : "ID",
                  "example" : "1"
                }
              }
            }, {
              "$ref" : "#/components/schemas/user"
            } ]
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/time"
            } ]
          }
        },
        "xml" : {
          "name" : "response"
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "sort" : {
            "type" : "string",
            "description" : "sort"
          },
          "order" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "filter" : {
            "allOf" : [ {
              "type" : "object",
              "properties" : {
                "IS_ONLINE" : {
                  "type" : "string",
                  "description" : "Y/N - позволяет показать только авторизованных или нет пользователей"
                },
                "NAME_SEARCH" : {
                  "type" : "string",
                  "description" : "быстрый поиск по персональным данным"
                },
                "ID" : {
                  "type" : "string",
                  "description" : "ID",
                  "example" : "1"
                }
              }
            }, {
              "$ref" : "#/components/schemas/user"
            } ]
          }
        }
      },
      "inline_response_200_4" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "array",
            "items" : {
              "allOf" : [ {
                "type" : "object",
                "properties" : {
                  "ID" : {
                    "type" : "string",
                    "description" : "ID",
                    "example" : "1"
                  }
                }
              }, {
                "$ref" : "#/components/schemas/user"
              } ]
            }
          },
          "total" : {
            "type" : "integer",
            "description" : "Количество найденных пользователей",
            "example" : 1
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/time"
            } ]
          }
        }
      },
      "body_1" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "anyOf" : [ {
              "type" : "object",
              "properties" : {
                "NAME" : {
                  "type" : "string",
                  "description" : "Имя"
                },
                "LAST_NAME" : {
                  "type" : "string",
                  "description" : "фамилия"
                },
                "SECOND_NAME" : {
                  "type" : "string",
                  "description" : "отчество"
                },
                "WORK_POSITION" : {
                  "type" : "string",
                  "description" : "должность"
                },
                "UF_DEPARTMENT_NAME" : {
                  "type" : "string",
                  "description" : "название подразделения"
                },
                "USER_TYPE" : {
                  "type" : "string",
                  "description" : "тип пользователя. Может принимать следующие значения:\n  employee - сотрудник;\n  extranet - пользователь экстранета;\n  email - почтовый пользователь.\n"
                }
              },
              "description" : "Основные поля (в любом кол-ве)"
            }, {
              "type" : "object",
              "properties" : {
                "Find" : {
                  "type" : "string",
                  "description" : "Ищет во всех основных полях"
                }
              }
            } ]
          }
        }
      },
      "body_2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/user"
        }, {
          "required" : [ "EMAIL" ]
        } ]
      },
      "body_3" : {
        "xml" : {
          "name" : "request"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/user"
        }, {
          "required" : [ "EMAIL" ]
        } ]
      },
      "inline_response_200_5" : {
        "properties" : {
          "result" : {
            "type" : "integer",
            "example" : 11
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/time"
            } ]
          }
        }
      },
      "inline_response_200_6" : {
        "properties" : {
          "result" : {
            "type" : "integer",
            "example" : 11
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/time"
            } ]
          }
        },
        "xml" : {
          "name" : "response"
        }
      },
      "inline_response_200_7" : {
        "properties" : {
          "result" : {
            "type" : "boolean"
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/time"
            } ]
          }
        }
      },
      "inline_response_200_8" : {
        "properties" : {
          "result" : {
            "type" : "integer",
            "example" : 1
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/time"
            } ]
          }
        },
        "xml" : {
          "name" : "response"
        }
      },
      "inline_response_400" : {
        "example" : {
          "error" : "ERROR_CORE",
          "error_description" : "access_denied"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/error"
        } ]
      },
      "body_4" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "ID" : {
              "type" : "string",
              "description" : "ID",
              "example" : "1"
            }
          }
        }, {
          "$ref" : "#/components/schemas/user"
        }, {
          "required" : [ "ID" ]
        } ]
      },
      "body_5" : {
        "xml" : {
          "name" : "require"
        },
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "ID" : {
              "type" : "string",
              "description" : "ID",
              "example" : "1"
            }
          }
        }, {
          "$ref" : "#/components/schemas/user"
        }, {
          "required" : [ "ID" ]
        } ]
      },
      "body_6" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/call_ext_register_req"
        }, {
          "required" : [ "PHONE_NUMBER", "TYPE", "USER_ID", "USER_PHONE_INNER" ]
        } ]
      },
      "inline_response_200_9" : {
        "properties" : {
          "result" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/call_ext_register_res"
            } ]
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/time"
            } ]
          }
        }
      },
      "body_7" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/call_ext_finish_req"
        }, {
          "required" : [ "PHONE_NUMBER", "TYPE", "USER_ID", "USER_PHONE_INNER" ]
        } ]
      },
      "inline_response_200_10" : {
        "properties" : {
          "result" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/call_ext_finish_res"
            } ]
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/time"
            } ]
          }
        }
      },
      "call_ext_register_res_CRM_CREATED_ENTITIES" : {
        "type" : "object",
        "properties" : {
          "ENTITY_TYPE" : {
            "type" : "string",
            "description" : "тип созданной сущности"
          },
          "ENTITY_ID" : {
            "type" : "integer",
            "description" : "идентификатор созданной сущности"
          }
        }
      }
    },
    "responses" : {
      "200_result" : {
        "description" : "Результат запроса",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200_7"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200_8"
            }
          }
        }
      },
      "200_result_int" : {
        "description" : "Результат запроса",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200_5"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200_6"
            }
          }
        }
      },
      "400_bad_request" : {
        "description" : "Неправильный запрос",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_400"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_400"
            }
          }
        }
      },
      "401_unauthorized" : {
        "description" : "Ошибка авторизации",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_401"
            },
            "examples" : {
              "expired_token" : {
                "description" : "Просрочен токен",
                "value" : {
                  "error" : "expired_token",
                  "error_description" : "The access token provided has expired"
                }
              },
              "invalid_token" : {
                "description" : "Ошибка в токене",
                "value" : {
                  "error" : "invalid_token",
                  "error_description" : "Unable to get application by token"
                }
              }
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_401"
            },
            "examples" : {
              "expired_token" : {
                "description" : "Просрочен токен",
                "value" : "<response>\n  <error>expired_token</error>\n  <error_description>The access token provided has expired.</error_description>\n</response>"
              },
              "invalid_token" : {
                "description" : "Ошибка в токене",
                "value" : "<response>\n  <error>invalid_token</error>\n  <error_description>Unable to get application by token.</error_description>\n</response>"
              }
            }
          }
        }
      },
      "403_forbidden" : {
        "description" : "Доступ запрещен",
        "headers" : {
          "status" : {
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string",
              "example" : "403 Forbidden"
            }
          }
        }
      }
    },
    "parameters" : {
      "param_transport" : {
        "name" : "transport",
        "in" : "path",
        "description" : "Формат выдачи результатов (json|xml)",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "json", "xml" ]
        }
      }
    },
    "examples" : {
      "expired_token" : {
        "description" : "Просрочен токен",
        "value" : {
          "error" : "expired_token",
          "error_description" : "The access token provided has expired"
        }
      },
      "invalid_token" : {
        "description" : "Ошибка в токене",
        "value" : {
          "error" : "invalid_token",
          "error_description" : "Unable to get application by token"
        }
      }
    },
    "securitySchemes" : {
      "ApiIntegrationAuth" : {
        "type" : "apiKey",
        "name" : "auth",
        "in" : "query"
      }
    }
  }
}